{
  "stats": {
    "suites": 1,
    "tests": 4,
    "passes": 1,
    "pending": 1,
    "failures": 2,
    "start": "2017-06-29T01:47:40.561Z",
    "end": "2017-06-29T01:47:40.940Z",
    "duration": 379,
    "testsRegistered": 4,
    "passPercent": 33.3,
    "pendingPercent": 25,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "danger",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "title": "",
    "suites": [
      {
        "title": "Sample test for reporter development",
        "suites": [],
        "tests": [
          {
            "title": "Passing Test",
            "trid": "111111",
            "fullTitle": "Sample test for reporter development Passing Test",
            "timedOut": false,
            "duration": 5,
            "speed": "fast",
            "pass": true,
            "fail": false,
            "errored": false,
            "pending": false,
            "code": "var generator = generatorFunction.apply(this, arguments);\nvar spawn = new PromiseSpawn$(undefined, undefined, yieldHandler,\n                              stack);\nvar ret = spawn.promise();\nspawn._generator = generator;\nspawn._promiseFulfilled(undefined);\nreturn ret;",
            "err": {},
            "isRoot": false,
            "uuid": "f0b75768-8a37-4150-bbce-a42cf8e3cbde",
            "parentUUID": "2cbb9537-095d-453c-ae3a-13eb198bdf61",
            "isHook": false,
            "jiraKey": "",
            "state": "passed",
            "skipped": false
          },
          {
            "title": "Failing Test",
            "trid": "222222",
            "fullTitle": "Sample test for reporter development Failing Test",
            "timedOut": false,
            "duration": 7,
            "pass": false,
            "fail": true,
            "errored": false,
            "pending": false,
            "code": "var generator = generatorFunction.apply(this, arguments);\nvar spawn = new PromiseSpawn$(undefined, undefined, yieldHandler,\n                              stack);\nvar ret = spawn.promise();\nspawn._generator = generator;\nspawn._promiseFulfilled(undefined);\nreturn ret;",
            "err": {
              "name": "AssertionError",
              "message": "3 == 4: expected 3 to equal 4",
              "showDiff": true,
              "actual": "3",
              "expected": "4",
              "estack": "AssertionError: 3 == 4: expected 3 to equal 4\n    at Context.<anonymous> (test/_examples/development/reporterSampleTest.js:29:12)\n    at next (native)\nFrom previous event:",
              "diff": "- 3\n+ 4\n",
              "stack": "AssertionError: 3 == 4: expected 3 to equal 4\n    at Context.<anonymous> (test/_examples/development/reporterSampleTest.js:29:12)\n    at next (native)\nFrom previous event:"
            },
            "isRoot": false,
            "uuid": "1c8d1980-251a-4f14-8eca-ec6d3d9126b9",
            "parentUUID": "2cbb9537-095d-453c-ae3a-13eb198bdf61",
            "isHook": false,
            "jiraKey": "",
            "state": "failed",
            "skipped": false
          },
          {
            "title": "Pending Test",
            "fullTitle": "Sample test for reporter development Pending Test",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "errored": false,
            "pending": true,
            "code": "",
            "err": {},
            "isRoot": false,
            "uuid": "a672c9ad-e1c9-4a6b-8e7e-1edff74534cb",
            "parentUUID": "2cbb9537-095d-453c-ae3a-13eb198bdf61",
            "isHook": false,
            "jiraKey": "",
            "skipped": false
          },
          {
            "title": "Error Test",
            "trid": "444444",
            "fullTitle": "Sample test for reporter development Error Test",
            "timedOut": false,
            "duration": 4,
            "pass": false,
            "fail": true,
            "errored": true,
            "pending": false,
            "code": "var generator = generatorFunction.apply(this, arguments);\nvar spawn = new PromiseSpawn$(undefined, undefined, yieldHandler,\n                              stack);\nvar ret = spawn.promise();\nspawn._generator = generator;\nspawn._promiseFulfilled(undefined);\nreturn ret;",
            "err": {
              "estack": "Error: This is an error\n    at Context.<anonymous> (test/_examples/development/reporterSampleTest.js:49:11)\n    at next (native)\nFrom previous event:"
            },
            "isRoot": false,
            "uuid": "5865a3e7-4035-440a-9f83-06e11cfaa3da",
            "parentUUID": "2cbb9537-095d-453c-ae3a-13eb198bdf61",
            "isHook": false,
            "jiraKey": "",
            "state": "failed",
            "skipped": false
          }
        ],
        "pending": [
          {
            "title": "Pending Test",
            "fullTitle": "Sample test for reporter development Pending Test",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "errored": false,
            "pending": true,
            "code": "",
            "err": {},
            "isRoot": false,
            "uuid": "a672c9ad-e1c9-4a6b-8e7e-1edff74534cb",
            "parentUUID": "2cbb9537-095d-453c-ae3a-13eb198bdf61",
            "isHook": false,
            "jiraKey": "",
            "skipped": false
          }
        ],
        "root": false,
        "_timeout": 1200000,
        "file": "/test/_examples/development/reporterSampleTest.js",
        "uuid": "2cbb9537-095d-453c-ae3a-13eb198bdf61",
        "beforeHooks": [
          {
            "title": "\"before all\" hook",
            "fullTitle": "Sample test for reporter development \"before all\" hook",
            "timedOut": false,
            "duration": 5,
            "pass": false,
            "fail": false,
            "errored": false,
            "pending": false,
            "code": "_Logger2.default.addLogger(__filename);\nLogger.verbose('In berfore');",
            "err": {},
            "isRoot": false,
            "uuid": "26d10005-074a-4dca-9d02-2d9f8b8989ad",
            "parentUUID": "2cbb9537-095d-453c-ae3a-13eb198bdf61",
            "isHook": true,
            "jiraKey": "",
            "skipped": false
          },
          {
            "title": "\"before each\" hook",
            "fullTitle": "Sample test for reporter development \"before each\" hook",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "errored": false,
            "pending": false,
            "code": "",
            "err": {},
            "isRoot": false,
            "uuid": "cd987173-f26e-467c-b73d-3401b3265a8e",
            "parentUUID": "2cbb9537-095d-453c-ae3a-13eb198bdf61",
            "isHook": true,
            "jiraKey": "",
            "skipped": false
          }
        ],
        "afterHooks": [
          {
            "title": "\"after all\" hook",
            "fullTitle": "Sample test for reporter development \"after all\" hook",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "errored": false,
            "pending": false,
            "code": "",
            "err": {},
            "isRoot": false,
            "uuid": "32719d01-54b6-4787-b66b-14c9baa11450",
            "parentUUID": "2cbb9537-095d-453c-ae3a-13eb198bdf61",
            "isHook": true,
            "jiraKey": "",
            "skipped": false
          },
          {
            "title": "\"after each\" hook",
            "fullTitle": "Sample test for reporter development \"after each\" hook",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "errored": false,
            "pending": false,
            "code": "",
            "err": {},
            "isRoot": false,
            "uuid": "1baebc65-797f-4a7c-b720-6f7c84487558",
            "parentUUID": "2cbb9537-095d-453c-ae3a-13eb198bdf61",
            "isHook": true,
            "jiraKey": "",
            "skipped": false
          }
        ],
        "fullFile": "/Users/nvenkatram/gocode/src/github.com/airware/odin/forseti/test/_examples/development/reporterSampleTest.js",
        "passes": [
          {
            "title": "Passing Test",
            "trid": "111111",
            "fullTitle": "Sample test for reporter development Passing Test",
            "timedOut": false,
            "duration": 5,
            "speed": "fast",
            "pass": true,
            "fail": false,
            "errored": false,
            "pending": false,
            "code": "var generator = generatorFunction.apply(this, arguments);\nvar spawn = new PromiseSpawn$(undefined, undefined, yieldHandler,\n                              stack);\nvar ret = spawn.promise();\nspawn._generator = generator;\nspawn._promiseFulfilled(undefined);\nreturn ret;",
            "err": {},
            "isRoot": false,
            "uuid": "f0b75768-8a37-4150-bbce-a42cf8e3cbde",
            "parentUUID": "2cbb9537-095d-453c-ae3a-13eb198bdf61",
            "isHook": false,
            "jiraKey": "",
            "state": "passed",
            "skipped": false
          }
        ],
        "failures": [
          {
            "title": "Failing Test",
            "trid": "222222",
            "fullTitle": "Sample test for reporter development Failing Test",
            "timedOut": false,
            "duration": 7,
            "pass": false,
            "fail": true,
            "errored": false,
            "pending": false,
            "code": "var generator = generatorFunction.apply(this, arguments);\nvar spawn = new PromiseSpawn$(undefined, undefined, yieldHandler,\n                              stack);\nvar ret = spawn.promise();\nspawn._generator = generator;\nspawn._promiseFulfilled(undefined);\nreturn ret;",
            "err": {
              "name": "AssertionError",
              "message": "3 == 4: expected 3 to equal 4",
              "showDiff": true,
              "actual": "3",
              "expected": "4",
              "estack": "AssertionError: 3 == 4: expected 3 to equal 4\n    at Context.<anonymous> (test/_examples/development/reporterSampleTest.js:29:12)\n    at next (native)\nFrom previous event:",
              "diff": "- 3\n+ 4\n",
              "stack": "AssertionError: 3 == 4: expected 3 to equal 4\n    at Context.<anonymous> (test/_examples/development/reporterSampleTest.js:29:12)\n    at next (native)\nFrom previous event:"
            },
            "isRoot": false,
            "uuid": "1c8d1980-251a-4f14-8eca-ec6d3d9126b9",
            "parentUUID": "2cbb9537-095d-453c-ae3a-13eb198bdf61",
            "isHook": false,
            "jiraKey": "",
            "state": "failed",
            "skipped": false
          },
          {
            "title": "Error Test",
            "trid": "444444",
            "fullTitle": "Sample test for reporter development Error Test",
            "timedOut": false,
            "duration": 4,
            "pass": false,
            "fail": true,
            "errored": true,
            "pending": false,
            "code": "var generator = generatorFunction.apply(this, arguments);\nvar spawn = new PromiseSpawn$(undefined, undefined, yieldHandler,\n                              stack);\nvar ret = spawn.promise();\nspawn._generator = generator;\nspawn._promiseFulfilled(undefined);\nreturn ret;",
            "err": {
              "estack": "Error: This is an error\n    at Context.<anonymous> (test/_examples/development/reporterSampleTest.js:49:11)\n    at next (native)\nFrom previous event:"
            },
            "isRoot": false,
            "uuid": "5865a3e7-4035-440a-9f83-06e11cfaa3da",
            "parentUUID": "2cbb9537-095d-453c-ae3a-13eb198bdf61",
            "isHook": false,
            "jiraKey": "",
            "state": "failed",
            "skipped": false
          }
        ],
        "skipped": [],
        "hasBeforeHooks": true,
        "hasAfterHooks": true,
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 4,
        "totalPasses": 1,
        "totalFailures": 2,
        "totalPending": 1,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": true,
        "hasPending": true,
        "hasSkipped": false,
        "duration": 16,
        "rootEmpty": false
      }
    ],
    "tests": [],
    "pending": [],
    "root": true,
    "_timeout": 1200000,
    "uuid": "067c422e-0d0c-4848-a095-f420ea7cb111",
    "beforeHooks": [],
    "afterHooks": [],
    "fullFile": "",
    "file": "",
    "passes": [],
    "failures": [],
    "skipped": [],
    "hasBeforeHooks": false,
    "hasAfterHooks": false,
    "hasTests": false,
    "hasSuites": true,
    "totalTests": 0,
    "totalPasses": 0,
    "totalFailures": 0,
    "totalPending": 0,
    "totalSkipped": 0,
    "hasPasses": false,
    "hasFailures": false,
    "hasPending": false,
    "hasSkipped": false,
    "duration": 0,
    "rootEmpty": true
  },
  "allTests": [
    {
      "title": "Passing Test",
      "trid": "111111",
      "fullTitle": "Sample test for reporter development Passing Test",
      "timedOut": false,
      "duration": 5,
      "speed": "fast",
      "pass": true,
      "fail": false,
      "errored": false,
      "pending": false,
      "code": "var generator = generatorFunction.apply(this, arguments);\nvar spawn = new PromiseSpawn$(undefined, undefined, yieldHandler,\n                              stack);\nvar ret = spawn.promise();\nspawn._generator = generator;\nspawn._promiseFulfilled(undefined);\nreturn ret;",
      "err": {},
      "isRoot": false,
      "uuid": "f0b75768-8a37-4150-bbce-a42cf8e3cbde",
      "parentUUID": "2cbb9537-095d-453c-ae3a-13eb198bdf61",
      "isHook": false,
      "jiraKey": "",
      "state": "passed",
      "skipped": false
    },
    {
      "title": "Failing Test",
      "trid": "222222",
      "fullTitle": "Sample test for reporter development Failing Test",
      "timedOut": false,
      "duration": 7,
      "pass": false,
      "fail": true,
      "errored": false,
      "pending": false,
      "code": "var generator = generatorFunction.apply(this, arguments);\nvar spawn = new PromiseSpawn$(undefined, undefined, yieldHandler,\n                              stack);\nvar ret = spawn.promise();\nspawn._generator = generator;\nspawn._promiseFulfilled(undefined);\nreturn ret;",
      "err": {
        "name": "AssertionError",
        "message": "3 == 4: expected 3 to equal 4",
        "showDiff": true,
        "actual": "3",
        "expected": "4",
        "estack": "AssertionError: 3 == 4: expected 3 to equal 4\n    at Context.<anonymous> (test/_examples/development/reporterSampleTest.js:29:12)\n    at next (native)\nFrom previous event:",
        "diff": "- 3\n+ 4\n",
        "stack": "AssertionError: 3 == 4: expected 3 to equal 4\n    at Context.<anonymous> (test/_examples/development/reporterSampleTest.js:29:12)\n    at next (native)\nFrom previous event:"
      },
      "isRoot": false,
      "uuid": "1c8d1980-251a-4f14-8eca-ec6d3d9126b9",
      "parentUUID": "2cbb9537-095d-453c-ae3a-13eb198bdf61",
      "isHook": false,
      "jiraKey": "",
      "state": "failed",
      "skipped": false
    },
    {
      "title": "Pending Test",
      "fullTitle": "Sample test for reporter development Pending Test",
      "timedOut": false,
      "duration": 0,
      "pass": false,
      "fail": false,
      "errored": false,
      "pending": true,
      "code": "",
      "err": {},
      "isRoot": false,
      "uuid": "a672c9ad-e1c9-4a6b-8e7e-1edff74534cb",
      "parentUUID": "2cbb9537-095d-453c-ae3a-13eb198bdf61",
      "isHook": false,
      "jiraKey": "",
      "skipped": false
    },
    {
      "title": "Error Test",
      "trid": "444444",
      "fullTitle": "Sample test for reporter development Error Test",
      "timedOut": false,
      "duration": 4,
      "pass": false,
      "fail": true,
      "errored": true,
      "pending": false,
      "code": "var generator = generatorFunction.apply(this, arguments);\nvar spawn = new PromiseSpawn$(undefined, undefined, yieldHandler,\n                              stack);\nvar ret = spawn.promise();\nspawn._generator = generator;\nspawn._promiseFulfilled(undefined);\nreturn ret;",
      "err": {
        "estack": "Error: This is an error\n    at Context.<anonymous> (test/_examples/development/reporterSampleTest.js:49:11)\n    at next (native)\nFrom previous event:"
      },
      "isRoot": false,
      "uuid": "5865a3e7-4035-440a-9f83-06e11cfaa3da",
      "parentUUID": "2cbb9537-095d-453c-ae3a-13eb198bdf61",
      "isHook": false,
      "jiraKey": "",
      "state": "failed",
      "skipped": false
    }
  ],
  "allPending": [
    {
      "title": "Pending Test",
      "fullTitle": "Sample test for reporter development Pending Test",
      "timedOut": false,
      "duration": 0,
      "pass": false,
      "fail": false,
      "errored": false,
      "pending": true,
      "code": "",
      "err": {},
      "isRoot": false,
      "uuid": "a672c9ad-e1c9-4a6b-8e7e-1edff74534cb",
      "parentUUID": "2cbb9537-095d-453c-ae3a-13eb198bdf61",
      "isHook": false,
      "jiraKey": "",
      "skipped": false
    }
  ],
  "allPasses": [
    {
      "title": "Passing Test",
      "trid": "111111",
      "fullTitle": "Sample test for reporter development Passing Test",
      "timedOut": false,
      "duration": 5,
      "speed": "fast",
      "pass": true,
      "fail": false,
      "errored": false,
      "pending": false,
      "code": "var generator = generatorFunction.apply(this, arguments);\nvar spawn = new PromiseSpawn$(undefined, undefined, yieldHandler,\n                              stack);\nvar ret = spawn.promise();\nspawn._generator = generator;\nspawn._promiseFulfilled(undefined);\nreturn ret;",
      "err": {},
      "isRoot": false,
      "uuid": "f0b75768-8a37-4150-bbce-a42cf8e3cbde",
      "parentUUID": "2cbb9537-095d-453c-ae3a-13eb198bdf61",
      "isHook": false,
      "jiraKey": "",
      "state": "passed",
      "skipped": false
    }
  ],
  "allFailures": [
    {
      "title": "Failing Test",
      "trid": "222222",
      "fullTitle": "Sample test for reporter development Failing Test",
      "timedOut": false,
      "duration": 7,
      "pass": false,
      "fail": true,
      "errored": false,
      "pending": false,
      "code": "var generator = generatorFunction.apply(this, arguments);\nvar spawn = new PromiseSpawn$(undefined, undefined, yieldHandler,\n                              stack);\nvar ret = spawn.promise();\nspawn._generator = generator;\nspawn._promiseFulfilled(undefined);\nreturn ret;",
      "err": {
        "name": "AssertionError",
        "message": "3 == 4: expected 3 to equal 4",
        "showDiff": true,
        "actual": "3",
        "expected": "4",
        "estack": "AssertionError: 3 == 4: expected 3 to equal 4\n    at Context.<anonymous> (test/_examples/development/reporterSampleTest.js:29:12)\n    at next (native)\nFrom previous event:",
        "diff": "- 3\n+ 4\n",
        "stack": "AssertionError: 3 == 4: expected 3 to equal 4\n    at Context.<anonymous> (test/_examples/development/reporterSampleTest.js:29:12)\n    at next (native)\nFrom previous event:"
      },
      "isRoot": false,
      "uuid": "1c8d1980-251a-4f14-8eca-ec6d3d9126b9",
      "parentUUID": "2cbb9537-095d-453c-ae3a-13eb198bdf61",
      "isHook": false,
      "jiraKey": "",
      "state": "failed",
      "skipped": false
    },
    {
      "title": "Error Test",
      "trid": "444444",
      "fullTitle": "Sample test for reporter development Error Test",
      "timedOut": false,
      "duration": 4,
      "pass": false,
      "fail": true,
      "errored": true,
      "pending": false,
      "code": "var generator = generatorFunction.apply(this, arguments);\nvar spawn = new PromiseSpawn$(undefined, undefined, yieldHandler,\n                              stack);\nvar ret = spawn.promise();\nspawn._generator = generator;\nspawn._promiseFulfilled(undefined);\nreturn ret;",
      "err": {
        "estack": "Error: This is an error\n    at Context.<anonymous> (test/_examples/development/reporterSampleTest.js:49:11)\n    at next (native)\nFrom previous event:"
      },
      "isRoot": false,
      "uuid": "5865a3e7-4035-440a-9f83-06e11cfaa3da",
      "parentUUID": "2cbb9537-095d-453c-ae3a-13eb198bdf61",
      "isHook": false,
      "jiraKey": "",
      "state": "failed",
      "skipped": false
    }
  ],
  "copyrightYear": 2017
}